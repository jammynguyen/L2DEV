@model PE.HMIWWW.ViewModel.Module.Lite.Cassette.VM_CassetteOverview
@{
    ViewBag.Title = VM_Resources.PAGE_TITLE_Cassette_EditCassetteDialog;
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

@using (Ajax.BeginForm("UpdateCassette", "Cassette", new AjaxOptions { UpdateTargetId = "formContainer", OnBegin = "OnFormBegin", OnSuccess = "OnFormSuccess", OnFailure = "OnFormError" }, new { @class = "container-fluid", id = "form", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id);

    <div class="row form-group">
        <div class="col text-right align-self-center">
            <label>@Html.LabelFor(x => x.CassetteName)</label>
        </div>
        <div class="col">
            @Html.Kendo().TextBoxFor(x => x.CassetteName).HtmlAttributes(new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.CassetteName)
        </div>
    </div>

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.FkCassetteType)</label>
        </div>
        <div class="col">
            @(Html.Kendo().DropDownListFor(x => x.FkCassetteType)
                                             .Name("FkCassetteType")
                                             .DataTextField("Text")
                                             .DataValueField("Value")
                                             .HtmlAttributes(new { @class = "form-control form-control-sm" })
                                             .BindTo(new SelectList(@ViewBag.CassType.Items, "CassetteTypeId", "CassetteTypeName"))
                                             .OptionLabel("-")
            )

        </div>
    </div>

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.Status)</label>
        </div>
        <div class="col">
            @(Html.Kendo().DropDownListFor(x => x.Status)
                                             .Name("Status")
                                             .DataTextField("Text")
                                             .DataValueField("Value")
                                             .HtmlAttributes(new { @class = "form-control form-control-sm" })
                                             .BindTo(new SelectList(@ViewBag.CassStatus.Items, "Key", "Value"))
                                             .OptionLabel("-")
            )

        </div>
    </div>

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.NumberOfPositions)</label>
        </div>
        <div class="col">
            @Html.Kendo().TextBoxFor(x => x.NumberOfPositions).HtmlAttributes(new { @class = "form-control form-control-sm" })
            @Html.ValidationMessageFor(x => x.NumberOfPositions)
        </div>
        @*@Html.Kendo().TextBoxFor(x => x.DefectCatalogueCategory).HtmlAttributes( new { @class = "form-control form-control-sm" })*@
    </div>



    <hr />

    <div class="row form-group">
        <div class="col invalid">
            <p id="error">
                <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
            </p>
        </div>
        <div class="col text-right">
            <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
                @VM_Resources.GLOB_Form_Button_Save
            </button>
        </div>
    </div>
}

<script>
    //$.validator.unobtrusive.parse("#form");

    $(function () {

        $('#error').css("display", "none");
        $("#form").kendoValidator().data("kendoValidator");

    });

    function displayMessage() {

        var validator = $("#form").kendoValidator().data("kendoValidator");

        if (validator.validate()) {
            $('#error').css("display", "none");
        } else {
            $('#error').css("display", "block");
            $('#popup-footer')
                .css('display', 'block')
                .css('background-color', 'rgb(206, 0, 55)');
        }
    };

</script>