@{
    ViewBag.Title = VM_Resources.PAGE_TITLE_Cassette_Index;
    Layout = "~/Views/Shared/_LayoutWithoutWidgets.cshtml";
}

@section module_menu
        {
    @Html.ImageButton("new", "AddNew()", false)
}

@(Html.Kendo().Grid<PE.HMIWWW.ViewModel.Module.Lite.Cassette.VM_CassetteOverview>()
                .Name("CassetteGrid")
                .HtmlAttributes(new { style = @String.Format(" height:{0}px;", ViewBag.FullGridHeight) })
                .Scrollable()
                .Pageable(p => p
                    .Messages(m => m.Display(VM_Resources.GLOB_pagination)))
                .Filterable()
                .Sortable()
                .Columns(columns =>
                {
                    columns.Bound(p => p.Id).Visible(false).Filterable(false).Width(15);
		            columns.Bound(p => p.CassetteName).Filterable(true).Width(280);
		            columns.ForeignKey(p => p.Status, (SelectList)ViewBag.CassStatus).Width(250);
		            columns.ForeignKey(p => p.FkCassetteType, (SelectList)ViewBag.CassType).Width(220);
		            columns.Bound(p => p.NumberOfPositions).Filterable(true).Width(200).HtmlAttributes(new { style = "text-align: right;" });
		            columns.Bound(p => p.StandNo).Filterable(true).Width(200).HtmlAttributes(new { style = "text-align: right;" });
		            columns.ForeignKey(p => p.Arrangement, (SelectList)ViewBag.CassArrangement).Width(210);
		            columns.Bound(p => p.Status).Visible(false);
		            columns.Bound(p => p.Id).Sortable(false).Groupable(false).Filterable(false).Title("").ClientTemplate(
				                    "#if (Status == 0 | Status == 1 | Status == 2 | Status == 6 | Status == 5) {#" + @Html.ImageButton("edit", "EditData(#= Id #)", false).ToString() +
				                    @Html.ImageButton("delete", "Delete(#= Id #)", false).ToString() +
				                    "#} else {#" + " " + "#}#");
                })
                .DataSource(ds => ds
                                    .Ajax()
                                    .ServerOperation(true)
                                    .PageSize(27)
                                    .Events(e => e.Error("TelerikErrorHandler"))
                                    .Read(r => r.Action("GetCassetteData", "Cassette"))
                           )
)

@Scripts.Render("~/Scripts/module/Cassette")