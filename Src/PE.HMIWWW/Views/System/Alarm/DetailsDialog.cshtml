@model PE.HMIWWW.ViewModel.System.VM_AlarmItem

@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

@if (Model != null && !@ViewData.ModelState.IsValid)
{
    <script>
        $(document).ready(function () {
            $("#popup-footer").css('background', '#ce0037').css('color', '#fff');
        })
    </script>

}
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.AlarmCategoryName, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @Html.DisplayFor(m => m.AlarmCategoryName, new { @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.AlarmDate, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @Html.DisplayFor(m => m.AlarmDate, new { @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.AlarmOwner, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @Html.DisplayFor(m => m.AlarmOwner, new { @class = "form-control" })
    </div>
</div>
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.AlarmType, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @Html.DisplayFor(m => m.AlarmType, new { @class = "form-control" })
    </div>
</div>
@if (Model.ToConfirm == true && Model.ConfirmationDate == null)
{
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.ToConfirm, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @if (Model.ToConfirm == true)
        {
            @Html.Name(((SelectList)ViewBag.YesNo).Where(p => p.Value == "1").First().Text)
        }
        else
        {
            @Html.Name(((SelectList)ViewBag.YesNo).Where(p => p.Value == "0").First().Text)
        }
    </div>
</div>
}
else
{
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.ConfirmedBy, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @Html.DisplayFor(m => m.ConfirmedBy, new { @class = "form-control" })
    </div>
</div>
    <div class="form-group row">
        <div class="col-1"></div>
        <div class="col-4 text-left">
            @Html.LabelFor(m => m.ConfirmationDate, new { @class = "control-label" })
        </div>
        <div class="col-7">
            @Html.DisplayFor(m => m.ConfirmationDate, new { @class = "form-control" })
        </div>
    </div>
}
<div class="form-group row">
    <div class="col-1"></div>
    <div class="col-4 text-left">
        @Html.LabelFor(m => m.Message, new { @class = "control-label" })
    </div>
    <div class="col-7">
        @Html.DisplayFor(m => m.Message, new { @class = "form-control" })
    </div>
</div>
@if (Model.ToConfirm == true && Model.ConfirmationDate == null)
{
    <hr />
    <input type="submit" class="btn btn-default btn-primary popup_button" value="@PE.HMIWWW.Core.Resources.VM_Resources.BUTTON_SubmitForm" />
}

