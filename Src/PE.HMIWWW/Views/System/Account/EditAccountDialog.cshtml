@model PE.HMIWWW.ViewModel.System.VM_Account

@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}
@if (Model != null && !@ViewData.ModelState.IsValid)
{
    <script>
        $(document).ready(function () {
            $("#popup-footer").css('background', '#ce0037').css('color', '#fff');
        })
    </script>
}

@using (Ajax.BeginForm("UpdateAccount", "Account", new AjaxOptions { UpdateTargetId = "formContainer", OnBegin = "OnFormBegin", OnSuccess = "OnFormSuccess", OnFailure = "OnFormError" }, new { @class = "form-horizontal", id = "form", role = "form" }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserName)
    @Html.HiddenFor(model => model.Id)

    <div>
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                    @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control popup-input rounded-0" } })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                    @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control popup-input rounded-0" } })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group mt-4">
                    @Html.LabelFor(m => m.LeftToRight, new { @class = "control-label" })
                    @*@Html.CheckBoxFor(m => m.LeftToRight)*@
                    @Html.RadioButtonFor(m => m.LeftToRight, "true") @PE.HMIWWW.Core.Resources.VM_Resources.GLOB_Name_Yes 
                    @Html.RadioButtonFor(m => m.LeftToRight, "false") @PE.HMIWWW.Core.Resources.VM_Resources.GLOB_Name_No
                    @Html.ValidationMessageFor(m => m.LeftToRight, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                    @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control popup-input rounded-0" } })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.JobPosition, new { @class = "control-label" })
                    @Html.EditorFor(m => m.JobPosition, new { htmlAttributes = new { @class = "form-control popup-input rounded-0" } })
                    @*@Html.ValidationMessageFor(m => m.JobPosition, "", new { @class = "text-danger" })*@
                    @Html.ValidationMessageFor(m => m.JobPosition, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <hr />
        <input type="submit" class="btn btn-default btn-primary popup_button" value="@PE.HMIWWW.Core.Resources.VM_Resources.BUTTON_SubmitForm" />
        <div class="clearfix"></div>
    </div>
}


<script>
    //$.validator.unobtrusive.parse("#form");

    //$(function () {

    //    var validator = $("#form").kendoValidator().data("kendoValidator");

    //    $("form").submit(function (event) {
    //        if (validator.validate()) {
    //            $('#error').css("display", "none");
    //        } else {
    //            event.preventDefault();
    //            $('#error').css("display", "block");
    //            $('#popup-footer')
    //                .css('display', 'block')
    //                .css('background-color', 'rgb(206, 0, 55)');
    //        }
    //    });

    //});

</script>