@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    //THIS METHOD WILL BE CALLED BY SYSTEM (SERVER) IN CASE DATA CHANGE, NAME IS IMPORTANT !!!
    function RefreshData() {
    	$("#WidgetConfigurations").data("kendoGrid").dataSource.read();
    	$("#WidgetConfigurations").data("kendoGrid").refresh();
    }
</script>

@section module_menu
{
	@*@Html.ImageButton("new", "AddNew()", false)*@
}

@(Html.Kendo().Grid<PE.HMIWWW.ViewModel.System.VM_WidgetConfigurations>()
	.Name("WidgetConfigurations")
	.HtmlAttributes(new { style = @String.Format("border:none !important; height:{0}px;", ViewBag.FullGridHeight) })
	.Pageable(p => p
                .Messages(m => m.Display(VM_Resources.GLOB_pagination)))
    .Sortable().Filterable(filtering => filtering.Enabled(true))
	.Groupable()
	.Filterable()
	.Sortable()
    .Scrollable()
	.Columns(columns =>
	{
		columns.Bound(p => p.Id).Visible(false).Filterable(false).Width(10);
		columns.Bound(p => p.WidgetName).Width(500);
		//columns.Bound(p => p.WidgetFileName).Width(450);
		//columns.Bound(p => p.SeqNum).Width(100);
		columns.Bound(p => p.Active).ClientTemplate("<input type='checkbox' disabled #= Active == true ? checked='checked' : '' # />").Width(100);
		columns.Bound(p => p.Id).Width(30).Sortable(false).Groupable(false).Filterable(false).Title("").ClientTemplate(@Html.ImageButton("edit", "EditData(#= Id #)", false).ToString() /*+ @Html.ImageButton("delete", "Delete(#= Id #)", false).ToString()*/);
	})
	.DataSource(dataSource => dataSource
		.Ajax()
		.ServerOperation(true)
		.PageSize(20)
		.Events(events => events.Error("TelerikErrorHandler"))
		.Read(read => read.Action("GetWidgetConfigurationsData", "WidgetConfiguration"))
	))

<script>
	function AddNew() {
        OpenInPopupWindow({
            controller: 'WidgetConfiguration',
            method: 'AddWidgetConfigurationDialog',
            width: 330,
            afterClose: RefreshData
        });
	}
    function EditData(itemId) {
        OpenInPopupWindow({
            controller: 'WidgetConfiguration',
            method: 'EditWidgetConfigurationDialog',
            width: 330,
            data: { id: itemId },
            afterClose: RefreshData
        });
	}

	function Delete(itemId) {
		var functionName = Delete2Confirm;
		var action = 'Delete';
		PromptMessage("@PE.HMIWWW.Core.Resources.VM_Resources.GLOB_ConfirmDelete", "@PE.HMIWWW.Core.Resources.VM_Resources.GLOB_ConfirmDeleteInfo", function () { return functionName(itemId, action) });
	}

    function Delete2Confirm(itemId, action) {

    	var url = serverAddress + "/WidgetConfiguration/" + action;
        var data = { Id: itemId };
    
        AjaxReqestHelper(url, data, RefreshData);
	}
</script>
